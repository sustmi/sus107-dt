// -*- C++ -*- generated by wxGlade HG on Fri Feb  3 02:55:31 2012

#include "DebuggerView.h"

// begin wxGlade: ::extracode

// end wxGlade


DebuggerView::DebuggerView(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
	wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
	// begin wxGlade: DebuggerView::DebuggerView
	notebook = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
	notebook_pane_hex = new wxPanel(notebook, wxID_ANY);
	debugger_menubar = new wxMenuBar();
	wxMenu* wxglade_tmp_menu_1 = new wxMenu();
	wxglade_tmp_menu_1->Append(wxID_ANY, wxT("Registers"), wxEmptyString, wxITEM_NORMAL);
	debugger_menubar->Append(wxglade_tmp_menu_1, wxT("View"));
	SetMenuBar(debugger_menubar);
	hex_view = new HexEditorCtrl(notebook_pane_hex, wxID_ANY);
	debugger_code_view = new DebuggerCodeGui(notebook, wxID_ANY);
	button_step = new wxButton(this, 201, wxT("Step"));
	button_continue = new wxButton(this, 202, wxT("Continue"));
	button_break = new wxButton(this, 203, wxT("Break"));

	set_properties();
	do_layout();
	// end wxGlade

	//hex_view->Connect(wxEVT_STC_UPDATEUI, (wxObjectEventFunction)(wxEventFunction)wxStaticCastEvent(wxStyledTextEventFunction, &DebuggerView::OnHexViewModified) , NULL, this);
}

void DebuggerView::setDebugger(Debugger *debugger)
{
    this->debugger = debugger;
    debugger_code_view->setDebugger(debugger);
}

BEGIN_EVENT_TABLE(DebuggerView, wxFrame)
	// begin wxGlade: DebuggerView::event_table
	EVT_MENU(wxID_ANY, DebuggerView::OnViewRegisters)
	EVT_BUTTON(201, DebuggerView::OnDebuggerStep)
	EVT_BUTTON(202, DebuggerView::OnDebuggerContinue)
	EVT_BUTTON(203, DebuggerView::OnDebuggerBreak)
	// end wxGlade
END_EVENT_TABLE();

void DebuggerView::uiUpdate()
{
	if (debugger->getEmulator()->isRunning()) {
		button_step->Disable();
		button_continue->Disable();
		button_break->Enable();
	} else {
		button_step->Enable();
		button_continue->Enable();
		button_break->Disable();
	}

	debugger_code_view->uiUpdate();
}

void DebuggerView::OnDebuggerStep(wxCommandEvent &event)
{
	debugger->getEmulator()->getMachine()->stepInstruction();
	debugger->uiUpdate();

	debugger_code_view->gotoAddress(debugger->getEmulator()->getMachine()->getPC());
}


void DebuggerView::OnDebuggerContinue(wxCommandEvent &event)
{
	debugger->getEmulator()->start();
}


void DebuggerView::OnDebuggerBreak(wxCommandEvent &event)
{
	debugger->getEmulator()->stop();
	debugger->uiUpdate();

	debugger_code_view->gotoAddress(debugger->getEmulator()->getMachine()->getPC());
}

void DebuggerView::OnViewRegisters(wxCommandEvent &event)
{
	debugger->uiShowRegisters();
}

void DebuggerView::OnHexViewModified(wxStyledTextEvent &event)
{
	printf("store: %d -%s-\n", event.GetPosition(), event.GetText().mb_str().data());

	/*if (hex_view->GetCurrentPos() % 3 == 2) {
		hex_view->CharRight();
		//hex_view->Get
	}*/
}

// wxGlade: add DebuggerView event handlers


void DebuggerView::set_properties()
{
	// begin wxGlade: DebuggerView::set_properties
	SetTitle(wxT("Debugger"));
	// end wxGlade

	char buf[65536];
	for (int i = 0; i < 65536; i++) {
		buf[i] = (i % ('z' - 'a')) + 'a';
	}

	hex_view->ReadFromBuffer(0, 65536, buf);
	//hex_view->ReadFromBuffer(16, 62, "qwertzuioplkjhgfdsayxcvbnm0123456789QWERTZUIOPLKJHGFDSAYXCVBNM");
	//hex_view->Select(5, 8); // data selection
	printf("%s\n", hex_view->GetOffsetFormatString().mb_str().data());
	printf("%d\n", hex_view->GetByteCount());
	printf("%d\n", hex_view->GetLastPosition());

}

void DebuggerView::do_layout()
{
	// begin wxGlade: DebuggerView::do_layout
	wxBoxSizer* debugger_panes = new wxBoxSizer(wxVERTICAL);
	wxBoxSizer* buttons = new wxBoxSizer(wxHORIZONTAL);
	wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
	sizer_1->Add(hex_view, 1, wxEXPAND, 0);
	notebook_pane_hex->SetSizer(sizer_1);
	notebook->AddPage(notebook_pane_hex, wxT("Hex"));
	notebook->AddPage(debugger_code_view, wxT("Code"));
	debugger_panes->Add(notebook, 1, wxEXPAND, 0);
	buttons->Add(button_step, 0, wxADJUST_MINSIZE, 0);
	buttons->Add(button_continue, 0, wxADJUST_MINSIZE, 0);
	buttons->Add(button_break, 0, wxADJUST_MINSIZE, 0);
	debugger_panes->Add(buttons, 0, wxALIGN_BOTTOM|wxALIGN_CENTER_HORIZONTAL|wxADJUST_MINSIZE, 0);
	SetSizer(debugger_panes);
	debugger_panes->Fit(this);
	Layout();
	// end wxGlade
}

